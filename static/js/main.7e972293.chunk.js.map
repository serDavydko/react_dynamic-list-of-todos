{"version":3,"sources":["User.js","TodoItem.js","TodoList.js","App.js","index.js"],"names":["User","_ref","userData","react_default","a","createElement","className","name","TodoItem","itemData","type","checked","completed","title","src_User","user","TodoList","items","todo","map","item","src_TodoItem","listOfTodo","getTodos","Object","asyncToGenerator","regenerator_default","mark","_callee","response","todos","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","apply","this","arguments","getUsers","_ref2","_callee2","_context2","App","state","isLoaded","isLoading","handleClick","_this","setState","setTimeout","users","objectSpread","find","id","userId","class","src_TodoList","onClick","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.7e972293.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ userData }) => (\n  <span className=\"User\">\n    {userData.name}\n  </span>\n);\n\nUser.propTypes = {\n  userData: PropTypes.string.isRequired,\n};\n\nexport default User;\n","\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport User from './User';\n\nconst TodoItem = ({ itemData }) => (\n    <tr className=\"TodoItem\">\n      <td className=\"row1\"><input type=\"checkbox\" checked={itemData.completed} /></td>\n      <td className=\"row2\">{itemData.title}</td>\n      <td className=\"row3\"><User userData={itemData.user} /></td>\n    </tr>\n);\n\nTodoItem.propTypes = {\n  itemData: PropTypes.shape(\n    {\n      title: PropTypes.string.isRequired,\n      completed: PropTypes.bool.isRequired,\n      user: PropTypes.object.isRequired,\n    }\n  ).isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({ todo }) => {\n  const items = todo.map(item => (\n    <TodoItem itemData={item} />\n  ));\n  return (\n    <table className=\"TodoList\">\n      <thead>\n        <tr>\n          <th className=\"row1\">Name</th>\n          <th className=\"row2\">Task</th>\n          <th className=\"row3\">Status</th>\n        </tr>\n      </thead>\n      <tbody>\n        {items}\n      </tbody>\n    </table>\n  );\n};\n\nTodoList.propTypes = {\n  todo: PropTypes.arrayOf(PropTypes.shape(\n    {\n      title: PropTypes.string.isRequired,\n      completed: PropTypes.bool.isRequired,\n      user: PropTypes.object.isRequired,\n    }\n  )).isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport './App.css';\n\nimport TodoList from './TodoList';\n\nlet listOfTodo = [];\nconst todosFromServer = 'https://jsonplaceholder.typicode.com/todos';\nconst usersFromServer = 'https://jsonplaceholder.typicode.com/users';\n\nconst getTodos = async() => {\n  const response = await fetch(todosFromServer);\n  const todos = await response.json();\n  return todos;\n};\n\nconst getUsers = async() => {\n  const response = await fetch(usersFromServer);\n  const todos = await response.json();\n  return todos;\n};\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    isLoaded: false,\n    isLoading: false,\n  };\n\n  async componentDidMount() {\n    const todos = await getTodos();\n    const users = await getUsers();\n\n    listOfTodo = todos.map(todo => ({\n      ...todo,\n      user: users.find(user => (user.id === todo.userId)),\n    }));\n  }\n\n  handleClick = () => {\n    this.setState({\n      isLoading: true,\n    });\n\n    setTimeout(() => {\n      this.setState({\n        todos: listOfTodo,\n        isLoaded: true,\n        isLoading: false,\n      });\n    }, 350);\n  };\n\n  render() {\n    return (\n      <main class =\"App-container\">\n        {this.state.isLoaded ? (\n          <div className=\"App\">\n            <h1>List of todos</h1>\n            <TodoList todo={this.state.todos} />\n          </div>\n            ) : (\n          <button className=\"App__load-button\" onClick={this.handleClick}>\n              {this.state.isLoading ? 'Fetching...' : 'Get data'}\n            </button>\n            )}\n      </main>\n        )\n  }\n}\n\n        export default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}